# This attack calls close() and writes invalid data.
# This attack makes sure that the data is valid when the file is reopened.

def busywork():
    def nothing():
        return None
    for _ in xrange(256):
        createthread(nothing)
# Delete the A and B files for a clean start.
ls = set(listfiles())
if "testfile.txt.a" in ls:
    removefile("testfile.txt.a")
if "testfile.txt.b" in ls:
    removefile("testfile.txt.b")
# Put valid data in the file.
myfile = ABopenfile("testfile.txt", True)
myfile.writeat("Stest1234E", 0)
myfile.close()
# Try up to 128 times.
for _ in xrange(128):
    # Open the file and write valid data.
    myfile = ABopenfile("testfile.txt", False)
    myfile.writeat("Stest1234E", 0)
    # Prepare a separate thread that will close the file.
    close_go = createlock()
    close_done = createlock()
    close_go.acquire(False)
    close_done.acquire(False)
    def close():
        close_go.acquire(True)
        myfile.close()
        close_done.release()
    createthread(close)
    # Prepare a separate thread that will write invalid data.
    invalidate_go = createlock()
    invalidate_done = createlock()
    invalidate_go.acquire(False)
    invalidate_done.acquire(False)
    def invalidate():
        try:
            invalidate_go.acquire(True)
            myfile.writeat("XXXXXXXXXX", 0)
        except:
            pass
        invalidate_done.release()
    createthread(invalidate)
    # Start some busywork to slow the computer down.
    createthread(busywork)
    # Close the file and then write invalid data.
    close_go.release()
    invalidate_go.release()
    # Wait for the two threads to finish.
    close_done.acquire(True)
    invalidate_done.acquire(True)
    # Open the file and check whether "Stest1234E" is still in it.
    try:
        myfile = ABopenfile("testfile.txt", False)
    except:
        log("The reference monitor cannot start again after the race.\n")
        break
    else:
        if "Stest1234E" != myfile.readat(None, 0):
            log("The written valid data was lost.\n")
            break
        myfile.close()
